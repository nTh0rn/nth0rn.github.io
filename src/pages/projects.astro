---
import { readAll } from "../lib/markdoc/read";
import { project } from "../lib/markdoc/frontmatter.schema";
import PageLayout from "../layouts/PageLayout.astro";
import PageMeta from "../components/PageMeta.astro";
import Highlights from "../components/Highlights.astro";
import { SITE_TITLE } from "../config";

const projects = await readAll({
  directory: "projects",
  frontmatterSchema: project,
});

const highlightedProjects = projects
.filter((p) => p.frontmatter.featured == true)
.sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );

const sortedProjects = projects
  .filter((p) => p.frontmatter.draft !== true)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.date).valueOf() -
      new Date(a.frontmatter.date).valueOf()
  );
---
<head>
  <script>
    var count=0;
		document.addEventListener("DOMContentLoaded", function(){
    var replacers = document.querySelectorAll('[data-replace]');
    for(var i=0; i<replacers.length; i++){
        let replaceClasses = JSON.parse(replacers[i].dataset.replace.replace(/'/g, '"'));
        Object.keys(replaceClasses).forEach(function(key) {
            replacers[i].classList.remove(key);
            count+=25;
            replacers[i].classList.add("delay-["+count+"ms]");
            replacers[i].classList.add(replaceClasses[key]);
        });
    }
});
	</script>
</head>
<PageLayout>
  <PageMeta title={`Projects | ${SITE_TITLE}`} slot="meta" />
  
  <section slot="main" class="md:mx-[5rem]">
  
    <strong><h1 class=" max-w-[600px]:hidden text-3xl mb-2 text-center">Highlighted Projects</h1></strong>
    <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 justify-around mb-5 max-[340px]:hidden">
      {
        highlightedProjects.map((project) => {
          const formattedDate = new Date(
            project.frontmatter.date
          ).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          }
          
          );
          return (
          
          <a href={project.frontmatter.url} class="col-span-1 group unset content-around hover:text-text pb-5 bg-opacity-[4%] bg-blueLight dark:bg-opacity-[4%] dark:bg-blueDark rounded-xl origin-center hover:scale-[105%] animate transition-transform duration-300 ease-in-out" target="_blank">
    <span class="duration-opacity-1000 relative transform transition-opacity opacity-0 ease-in-out" data-replace='{ "opacity-0": "opacity-100" }'>
    <div class="m-2 mb-0 content-around justify-center text-center text-xs sm:text-sm">

      <h3 class="transition-all text-center duration-0 text-sm md:text-xl font-bold dark:text-gray-200 light:text-gray-900">{project.frontmatter.title}&nbsp;</h3>
      <div class="sm:text-sm font-medium contrast-150 mb-1 dark:contrast-100 brightness-75 dark:brightness-100 text-center">
        <span class="sm:text-sm inline-block "><span class={project.frontmatter.language_color}> {project.frontmatter.language}</span></span><span class="sm:text-sm light:text-gray-800 dark:text-gray-400"> <time datetime={project.frontmatter.date.toISOString()}>
                  {formattedDate}
                </time></span>
      </div>
      <div class="mx-auto rounded-lg relative w-[75%] pb-[75%] overflow-hidden">
        <img class="absolute top-0 left-0 w-full h-full object-cover" src={project.frontmatter.image}>
      </div>
      <div class="sm:text-sm translate-y-[10px] duration-0">
        {project.frontmatter.description}
      </div>
    </div>
  </span>
  </a>

          );
        })
      }
    </div>
  <h1 class=" max-w-[600px]:hidden text-3xl mb-2 text-center">All Projects</h1>
  <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 justify-around mb-5 max-[340px]:hidden">
      {
        sortedProjects.map((project) => {
          const formattedDate = new Date(
            project.frontmatter.date
          ).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          }
          
          );
          return (
          
          <a href={project.frontmatter.url} class="col-span-1 group unset content-around hover:text-text pb-5 bg-opacity-[4%] bg-blueLight dark:bg-opacity-[4%] dark:bg-blueDark rounded-xl origin-center hover:scale-[105%] animate transition-transform duration-300 ease-in-out" target="_blank">
    <span class="duration-opacity-1000 relative transform transition-opacity opacity-0 ease-in-out" data-replace='{ "opacity-0": "opacity-100" }'>
    <div class="m-2 mb-0 content-around justify-center text-center text-xs sm:text-sm">

      <h3 class="transition-all text-center duration-0 text-sm md:text-xl font-bold dark:text-gray-200 light:text-gray-900">{project.frontmatter.title}&nbsp;</h3>
      <div class="sm:text-sm font-medium contrast-150 mb-1 dark:contrast-100 brightness-75 dark:brightness-100 text-center">
        <span class="sm:text-sm inline-block "><span class={project.frontmatter.language_color}> {project.frontmatter.language}</span></span><span class="sm:text-sm light:text-gray-800 dark:text-gray-400"> <time datetime={project.frontmatter.date.toISOString()}>
                  {formattedDate}
                </time></span>
      </div>
      <div class="mx-auto rounded-lg relative w-[75%] pb-[75%] overflow-hidden">
        <img class="absolute top-0 left-0 w-full h-full object-cover" src={project.frontmatter.image}>
      </div>
      <div class="sm:text-sm translate-y-[10px] duration-0">
        {project.frontmatter.description}
      </div>
    </div>
  </span>
  </a>

          );
        })
      }
    </div>
    <ul class="min-[340px]:hidden">
      {
        sortedProjects.map((project) => {
          const formattedDate = new Date(
            project.frontmatter.date
          ).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          }
          
          );
          return (
          
            <li class="group grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start duration-opacity-1000 relative transform transition-opacity opacity-0 ease-in-out" data-replace='{ "opacity-0": "opacity-100" }'>
              <div class="absolute animate rounded-lg translate-x-[-0.5%] transition-width z-0 delay-0 h-0 group-hover:h-full duration-500 ease-out w-0 group-hover:w-[101%] bg-opacity-[4%] bg-blueLight dark:bg-opacity-[4%] dark:bg-blueDark">&nbsp;</div>
              
              <div class="title z-10">
                <a
                  href={project.frontmatter.url}
                  target="_blank"
                  class="unset hover:text-text-link flex"
                >
                  <span>{project.frontmatter.title}&nbsp;</span>
                  <span class="opacity-50">({project.frontmatter.language})</span>
                  <span>
                    <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
                  </span>
                </a>
                
              </div>
              <div class="text-text-muted text-sm italic pt-1">
                <time datetime={project.frontmatter.date.toISOString()}>
                  {formattedDate}
                </time>
              </div>
            
            
            </li>
          
          );
        })
      }
    </ul>
  </section>
</PageLayout>
